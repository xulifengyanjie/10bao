<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.twsm.newstopic.dao.UserRoleRelationMapper" >
  <resultMap id="BaseResultMap" type="cn.com.twsm.newstopic.model.UserRoleRelation" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ROLE_ID, USER_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_role_relation
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_role_relation
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.twsm.newstopic.model.UserRoleRelation" >
    insert into user_role_relation (ID, ROLE_ID, USER_ID
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.twsm.newstopic.model.UserRoleRelation" >
    insert into user_role_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.twsm.newstopic.model.UserRoleRelation" >
    update user_role_relation
    <set >
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.twsm.newstopic.model.UserRoleRelation" >
    update user_role_relation
    set ROLE_ID = #{roleId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="cn.com.twsm.newstopic.model.Role" id="resultRoleMap" >
  	<id column="roleId" property="id" jdbcType="INTEGER" />
	<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="ROLE_DESCRIPTION" property="roleDescription" jdbcType="VARCHAR" />
  </resultMap> 

  <select id="getRolesByUserId" resultMap="resultRoleMap" parameterType="int">
	SELECT r.*, urr.user_id
	FROM role r, user_role_relation urr
	WHERE r.role=urr.role_id AND urr.user_id=#{user_id}
  </select>
  
  <delete id="deleteByUserIds" parameterType="java.util.List" >
    delete from user_role_relation
    where USER_ID in
    <foreach collection="list" item ="item" open="(" separator="," close=")">
    	#{item}
    </foreach>
  </delete>
  
   <insert id="insertBatch" parameterType="List">
    insert into user_role_relation (ROLE_ID, USER_ID)
    values 
    <foreach collection="list" item="item" separator="," index="index">
    	(#{item.roleId,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>